datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int       @id @default(autoincrement())
  username          String    @unique
  password          String
  email             String    @unique
  role              Role      @relation(fields: [roleId], references: [id])
  roleId            Int
  resetToken        String?   // Token for password setting/reset
  resetTokenExpiry  DateTime? // Expiry for the token
  experiences       Experience[]   @relation("UserExperiences")
  rewards           UserReward[]
  nfts              NFT[]
  collaborations    Collaborator[]
  clients           Client[]  @relation("UserClients")
  createdAt         DateTime  @default(now())
}


model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Experience {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  createdBy   User         @relation("UserExperiences", fields: [createdById], references: [id])
  createdById Int
  rewards     Reward[]
  createdAt   DateTime     @default(now())
}

model Reward {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?
  experience    Experience   @relation(fields: [experienceId], references: [id])
  experienceId  Int
  users         UserReward[]
  createdAt     DateTime     @default(now())
}

model NFT {
  id        Int       @id @default(autoincrement())
  tokenId   String    @unique
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   Int
  metadata  Json
  createdAt DateTime  @default(now())
}

model UserReward {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  reward    Reward    @relation(fields: [rewardId], references: [id])
  rewardId  Int
  createdAt DateTime  @default(now())
}

model Client {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  owner         User           @relation("UserClients", fields: [ownerId], references: [id])
  ownerId       Int
  plan          String
  collaborators Collaborator[]
  createdAt     DateTime       @default(now())
}

model Collaborator {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int  
  client    Client  @relation(fields: [clientId], references: [id])
  clientId  Int
  role      String
  createdAt DateTime @default(now())
}
